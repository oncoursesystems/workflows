name: docker-build

on:
  workflow_call:
    secrets:
      docker-username:
        description: Container registry username (if not using GitHub)
        required: false
      docker-password:
        description: Container registry password or personal access token (if not using GitHub)
        required: false
    inputs:
      context:
        # To set to a subdir, use format of "{{defaultContext}}:mysubdir"
        description: Docker context (path) to start build from
        type: string
        required: false
      registry:
        description: Server address of the container registry. If not set then will default to GitHub
        type: string
        required: false
        default: ghcr.io
      image-name:
        description: The docker image name
        type: string
        required: false
        default: ${{ github.repository }}
      runs-on:
        description: Defines the type of machine to run the workflow on
        type: string
        default: self-hosted
      push:
        description: Enables pushing of the image to the container registry
        type: boolean
        required: false
        default: true
      platforms:
        description: The platforms to build for, comma-delimited
        type: string
        required: false
        default: linux/amd64
      tag-rules:
        description: Defines rules for creating tags
        type: string
        required: false
        default: |
          type=ref,event=pr,priority=100
          type=raw,value={{tag}},priority=100
          type=raw,value=latest,enable={{is_default_branch}},priority=100
      flavor-rules:
        description: Defines global behavior for tags
        type: string
        required: false
        default: |
          latest=auto
    outputs:
      image-tag:
        description: Generated image tag
        value: ${{ jobs.build-image.outputs.image-tag }}

jobs:
  docker-publish:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: ‚öôÔ∏è  Setup Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: üè¶ Login to registry
        if: inputs.registry == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üè¶ Login to registry
        if: inputs.registry != 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-password }}

      - name: üè∑Ô∏è Extract metadata (tags, labels)
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}
          tags: ${{ inputs.tag-rules }}
          flavor: ${{ inputs.flavor-rules }}

      - name: üöÄ Docker Build
        uses: docker/build-push-action@v5
        with:
          platforms: ${{ inputs.platforms }}
          context: ${{ inputs.context }}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ inputs.push }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: $${{ steps.metadata.outputs.labels }}
          build-args: |
            APP_VERSION=${{ steps.metadata.outputs.version }}
          # use github cache API for faster builds:
          # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#cache-backend-api
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

        # for dependent jobs, we need to output the unique tag for this GHA run
        # based on the docker_meta tag priority rules, the highest priority tag
        # will be sent to this output
        # this step output is sent to job output, which is sent to workflow output
        # use this tag in another job with needs.<job-name>.outputs.image-tag
      - name: Find the primary image tag we just pushed, and output it
        id: image-tag
        run: |
          # shellcheck disable=SC2086
          echo "image-tag=${{ steps.metadata.outputs.version }}" >> $GITHUB_OUTPUT
